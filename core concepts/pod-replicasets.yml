apiVersion: v1

kind: ReplicationController

metadata: # ReplicationController metadata
  name: replicasets
  labels:
    app: replica-sets
    type: frontend

spec:
  template:
    metadata: # Pod metada
      name: myapp-pod
      labels:
        app: myapp
        type: frontend
    spec:
      containers:
      - name: nginx-container
        image: nginx:1.14.2
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
          - containerPort: 80
  replicas: 3

# Run and create this file object
# kubectl create -f pod-replicasets.yml

# See the list of pods using replicasets
# kubectl get pods

# See the list of replication controllers
# kubectl get replicationcontroller

# Delete a replicationcontroller
# kubectl delete replicationcontroller <replicationcontroller_name>

---
apiVersion: apps/v1

kind: ReplicaSet

metadata: # ReplicaSet metadata
  name: replicasets-app
  labels:
    app: replica-sets-app
    type: frontend-app

spec:
  selector:
    matchLabels:
      type: frontend-app
  template:
    metadata: # Pod metada
      name: myapp-pod-app
      labels:
        app: myapp-app
        type: frontend-app
    spec:
      containers:
      - name: nginx-container-app
        image: nginx:1.14.2
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
          - containerPort: 80
  replicas: 3

# Run and create this file object
# kubectl create -f pod-replicasets.yml

# See the list of pods using replicasets
# kubectl get pods

# See the list of replication controllers
# kubectl get replicaset

# Differance between replicaset and replication controller 
# Replicaset required selector definition in spec

# Delete a replicaset
# kubectl delete replicaset <replicaset_name>